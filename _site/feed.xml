<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-04-26T13:38:50-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">MindJective</title><subtitle>A digital space for technical notes,snippets and ramblings online.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><entry><title type="html">Managing Simple Texture(this) Jekyll Blog</title><link href="http://localhost:4000/blog/2019/04/24/managing-this-blog/" rel="alternate" type="text/html" title="Managing Simple Texture(this) Jekyll Blog" /><published>2019-04-24T00:00:00-04:00</published><updated>2019-04-24T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019/04/24/managing-this-blog</id><content type="html" xml:base="http://localhost:4000/blog/2019/04/24/managing-this-blog/">&lt;h3 id=&quot;heading-updating-the-blog-pushing-from-localhost-to-gh-pages&quot;&gt;Updating the Blog (pushing from localhost to gh-pages)&lt;/h3&gt;

&lt;p&gt;At some stage I added the blog - I believe through forking and cloning the original theme and then begun editing, customizing a few things along with mainly adding my own posts. It was saved using Git, pushed to GitHub and GitHub Pages along the special branch &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In GitHub there is the option to choose which branch to use, whether &lt;strong&gt;'master'&lt;/strong&gt; or &lt;strong&gt;'gh-pages'&lt;/strong&gt;. In our case we make sure that &lt;strong&gt;'gh-pages'&lt;/strong&gt; is selected. When we now commit and push the &lt;strong&gt;'gh-pages'&lt;/strong&gt; branch, the live site is updated.&lt;/p&gt;

&lt;h3 id=&quot;heading-customizing-layout--data&quot;&gt;Customizing (Layout &amp;amp; Data)&lt;/h3&gt;

&lt;p&gt;Edit stuff in these sections to change layouts&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/&lt;/code&gt; folder is pretty much self-explanitory in terms of the naming of things within, however there are a few things that may not be so obvious, especially being new to Jekyll.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;_layouts/home.html&lt;/em&gt; » The entrance that says 'MindJective', 'Blog'. Add other sections here.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;_layouts/blog.html&lt;/em&gt; » This is the general &lt;strong&gt;template&lt;/strong&gt; used for anything associated with 'Blog'.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;_layouts/page.html&lt;/em&gt; » This is the index page for listing all posts, it uses the 'Blog' template.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;_layouts/post.html&lt;/em&gt; » This is the detail view for any selected post. It uses the 'Blog' template&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;_layouts/redirect.html&lt;/em&gt; » Not quite sure at the moment how this redirect works.. . .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above secions make references to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/i18n.yml&lt;/code&gt; file which is accessed through the liquid templating syntax. Liquid won't really be discussed here however its specific syntax reference can be found &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt; here &lt;/a&gt;. This file is mainly for supporting translation of different languages; however seems to be used as a global area for storing global settings for common areas of the site.&lt;/p&gt;

&lt;p&gt;Generally the user of this blog is mainly interested in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder where new posts are added or the &lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt; where unfinished posts are kept.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><category term="blog" /><category term="theme" /><summary type="html">Updating the Blog (pushing from localhost to gh-pages)</summary></entry><entry><title type="html">Adding HTTPS to Rails-Nginx App</title><link href="http://localhost:4000/blog/2019/04/23/adding-https-rails-nginx/" rel="alternate" type="text/html" title="Adding HTTPS to Rails-Nginx App" /><published>2019-04-23T00:00:00-04:00</published><updated>2019-04-23T00:00:00-04:00</updated><id>http://localhost:4000/blog/2019/04/23/adding-https-rails-nginx</id><content type="html" xml:base="http://localhost:4000/blog/2019/04/23/adding-https-rails-nginx/">&lt;h1 id=&quot;heading-adding-https-to-rails-nginx-app-letsencrypt&quot;&gt;Adding HTTPS to Rails-Nginx App (LetsEncrypt)&lt;/h1&gt;

&lt;p&gt;This process can be broken down into (3) main sections:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Configuring Rails for ssl&lt;/li&gt;
  &lt;li&gt;Installing and setting up LetsEncrypt&lt;/li&gt;
  &lt;li&gt;Configuring Nginx to allow and redirect to HTTPS&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;heading-1-configure-rails-for-https&quot;&gt;1. Configure Rails for HTTPS&lt;/h3&gt;

&lt;p&gt;The main(only) file to focus on is »  &lt;code class=&quot;highlighter-rouge&quot;&gt;/config/environments/production.rb&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;force_ssl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;heading-2-setting-up-letsencrypt&quot;&gt;2. Setting up LetsEncrypt&lt;/h3&gt;

&lt;p&gt;in &lt;code class=&quot;highlighter-rouge&quot;&gt;/home/&amp;lt;your_username&amp;gt;/&lt;/code&gt; directory, or some other directory of choice, do the following in terminal:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/letsencrypt/letsencrypt
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ./letsencrypt &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./letsencrypt-auto
&lt;span class=&quot;c&quot;&gt;# Do a dry run TEST&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./certbot-auto certonly &lt;span class=&quot;nt&quot;&gt;--standalone&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &amp;lt;domain_name&amp;gt;.com &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; www.&amp;lt;domain_name&amp;gt;.com &lt;span class=&quot;nt&quot;&gt;--dry-run&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Once everything with dry run checks out then do full run&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Note: In some instances Nginx may need to be halted with: sudo service nginx stop to get access to port 80&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./certbot-auto certonly &lt;span class=&quot;nt&quot;&gt;--standalone&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &amp;lt;domain_name&amp;gt;.com &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; www.&amp;lt;domain_name&amp;gt;.com
&lt;span class=&quot;c&quot;&gt;# Enter crontab settings&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;crontab &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;# Make new setting to renew certificates, in this case: (Every Saturday at 9:05 a.m)&lt;/span&gt;
05 9 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/letsencrypt/ &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./certbot-auto renew &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; /etc/init.d/nginx reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: the above &lt;em&gt;most likely will&lt;/em&gt; install its own config stuff within an existing nginx config file. All of the stuff added is necessary for it 
to work, however can be altered slightly as seen below.&lt;/p&gt;

&lt;h3 id=&quot;heading-3-configuring-nginx-config-file-remote-server&quot;&gt;3. Configuring Nginx config file (remote server)&lt;/h3&gt;

&lt;p&gt;This can involve quite a few steps, however I've made a gist file which can be copied from &lt;a href=&quot;https://gist.github.com/Skull0Inc/d403bbc51a7a8b43b625cee158d6674a/raw/default-rails-ssl-nginx-config&quot;&gt;default-rails-ssl-nginx-config&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To set this file up navigate to the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx/sites-available&lt;/code&gt; folder and run:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Download the gist file, using the below command or just get access to the above linked info into a file somehow&lt;/span&gt;
wget https://gist.github.com/Skull0Inc/d403bbc51a7a8b43b625cee158d6674a/raw/default-rails-ssl-nginx-config

&lt;span class=&quot;c&quot;&gt;# After file downloads move it to a more preferred &amp;lt;your_app_name&amp;gt; (the name of your new Rails upstream)&lt;/span&gt;
mv default-rails-ssl-nginx-config &amp;lt;your_app_name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# IMPORTANT: Make sure to EDIT and replace all occurances of &amp;lt;app_name&amp;gt; and &amp;lt;domain_name&amp;gt; with the correct info.&lt;/span&gt;
vim &amp;lt;your_app_name&amp;gt;
..
..
..
&lt;span class=&quot;c&quot;&gt;# Make appropriate changes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Next we need to create a symbolic link in &lt;code class=&quot;highlighter-rouge&quot;&gt;sites-enabled&lt;/code&gt; that points to the newly created &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;your_app_name&amp;gt;&lt;/code&gt; file we just downloaded/created in &lt;code class=&quot;highlighter-rouge&quot;&gt;sites-available&lt;/code&gt; . Do the following:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Reference ln -s {source-filename} {symbolic-filename}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Go to /etc/nginx/sites-enabled/ and run&lt;/span&gt;
ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /etc/nginx/sites-available/&amp;lt;your_app_name&amp;gt; /etc/nginx/sites-enabled/&amp;lt;your_app_name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Restart Nginx&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service nginx reload
&lt;span class=&quot;c&quot;&gt;# OR start if not already running&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service nginx start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notes about this setup » At the time of setup for me there was already a set @app running for Rails and LetsEncrypt was setup &lt;strong&gt;after&lt;/strong&gt;; therefore the order of doing things may not be exactly suited for every individual case, and not meant as a follow-blindly guide but more as a reference of steps needed.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><category term="rails" /><category term="ssl" /><category term="nginx" /><category term="https" /><summary type="html">Adding HTTPS to Rails-Nginx App (LetsEncrypt)</summary></entry><entry><title type="html">Adding custom fonts (Icomoon) to Jekyll</title><link href="http://localhost:4000/blog/2018/11/18/adding-custom-icomoon-fonts-to-jekyll/" rel="alternate" type="text/html" title="Adding custom fonts (Icomoon) to Jekyll" /><published>2018-11-18T00:00:00-04:00</published><updated>2018-11-18T00:00:00-04:00</updated><id>http://localhost:4000/blog/2018/11/18/adding-custom-icomoon-fonts-to-jekyll</id><content type="html" xml:base="http://localhost:4000/blog/2018/11/18/adding-custom-icomoon-fonts-to-jekyll/">&lt;h2 id=&quot;heading-description&quot;&gt;Description&lt;/h2&gt;
&lt;p&gt;While beginning this &lt;strong&gt;Jekyll&lt;/strong&gt; blog, I came across the desire to add custom icons to the set, but wasn't sure exactly how to. Initially I starte
with &lt;a href=&quot;https://fontawesome.com&quot;&gt; Font-Awesome &lt;/a&gt; which could be integrated through the use of a Gem:&lt;a href=&quot;https://github.com/drewish/jekyll-font-awesome-sass&quot;&gt;jekyll-font-awesome-sass&lt;/a&gt;, however realized I only needed a custom subset of icons and decided to go with &lt;a href=&quot;https://icomoon.io&quot;&gt;Icomoon&lt;/a&gt; instead.&lt;/p&gt;

&lt;p&gt;Assuming you already know the awesomeness that Icomoon is; I'll imagine you already know how to select and download custom font sets, and if not go learn how to do so now!&lt;/p&gt;

&lt;h3 id=&quot;heading-the-process&quot;&gt;The Process&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Download the custom set of icons (&lt;strong&gt;icomoon.zip&lt;/strong&gt;) and extract to some relative location.&lt;/li&gt;
  &lt;li&gt;Copy '&lt;b&gt;icomoon/fonts/*&lt;/b&gt;' files to '&lt;b&gt;&amp;lt;your-project-name&amp;gt;/assets/fonts/*&lt;/b&gt;'.&lt;/li&gt;
  &lt;li&gt;Move '&lt;b&gt;icomoon/style.css&lt;/b&gt;' to '&lt;b&gt;&amp;lt;your-project-name&amp;gt;/_sass/custom-icons.scss&lt;/b&gt;'; note the &lt;strong&gt;.scss&lt;/strong&gt; extension.&lt;/li&gt;
  &lt;li&gt;Open the '&lt;b&gt;_sass/custom-icons.scss&lt;/b&gt;' file.&lt;/li&gt;
  &lt;li&gt;Change &lt;strong&gt;all the url paths&lt;/strong&gt; by prepending &lt;code class=&quot;highlighter-rouge&quot;&gt;../font&lt;/code&gt; before the &lt;code class=&quot;highlighter-rouge&quot;&gt;font/icomoon.*&lt;/code&gt;.
    &lt;h4 id=&quot;heading-example&quot;&gt;Example&lt;/h4&gt;
    &lt;ul&gt;
      &lt;li&gt;url('fonts/icomoon.eot?fscaxe');&lt;/li&gt;
      &lt;li&gt;url('&lt;code class=&quot;highlighter-rouge&quot;&gt;../&lt;/code&gt;fonts/icomoon.eot?fscaxe');&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For &lt;strong&gt;my&lt;/strong&gt; particular case I have &lt;b&gt;both&lt;/b&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;simple-texture-{blog,home}.scss&lt;/code&gt; within the &lt;code class=&quot;highlighter-rouge&quot;&gt;_sass&lt;/code&gt; folder.&lt;/li&gt;
  &lt;li&gt;Add the relative &lt;strong&gt;@import 'custom-icons';&lt;/strong&gt; to the main .scss file(s) to include the icons.&lt;/li&gt;
  &lt;li&gt;Remember the semi-colon at end of the &lt;b&gt;@import 'custom-icons';&lt;/b&gt;  statement.&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;heading-end-notes&quot;&gt;End Notes&lt;/h5&gt;

&lt;hr /&gt;
&lt;p&gt;In summary, all that we are really doing here is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;choosing the fonts we need from Icomoon App&lt;/li&gt;
  &lt;li&gt;copying the relevant files over into the correct places( the icon-font files and they css styling )&lt;/li&gt;
  &lt;li&gt;updating the font &lt;b&gt;src: url('correct-font-path')&lt;/b&gt; paths.&lt;/li&gt;
  &lt;li&gt;adding &lt;b&gt;@import 'custom-icons';&lt;/b&gt;to the main scss file(s).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, at the end of the src: url('&amp;lt;some path&amp;gt;&lt;b&gt;?******&lt;/b&gt;') path from the original &lt;b&gt;icomoon/style.css&lt;/b&gt; file there are extra characters like :
url('../fonts/icomoon.eot&lt;strong&gt;?fscaxe&lt;/strong&gt;'); I am not quite sure what they are, but they don't have an affect if not changed when updating the src url.
They are probably some cache-busting technique so the browser doesn't load old icon files from a cached copy.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><category term="jekyll" /><category term="icons" /><category term="fonts" /><category term="icomoon" /><summary type="html">Description While beginning this Jekyll blog, I came across the desire to add custom icons to the set, but wasn't sure exactly how to. Initially I starte with Font-Awesome which could be integrated through the use of a Gem:jekyll-font-awesome-sass, however realized I only needed a custom subset of icons and decided to go with Icomoon instead.</summary></entry><entry><title type="html">Updating rbenv on Linux(Ubuntu)</title><link href="http://localhost:4000/blog/2018/09/28/updating-rbenv-linux/" rel="alternate" type="text/html" title="Updating rbenv on Linux(Ubuntu)" /><published>2018-09-28T00:00:00-04:00</published><updated>2018-09-28T00:00:00-04:00</updated><id>http://localhost:4000/blog/2018/09/28/updating-rbenv-linux</id><content type="html" xml:base="http://localhost:4000/blog/2018/09/28/updating-rbenv-linux/">&lt;h3 id=&quot;heading-description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;My rbenv needed to be updated one time and didn't know how to go about doing that process. However came across the following and
its as simple as the commands below.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ref: https://www.endpoint.com/blog/2015/11/03/updating-rbenv-ruby-build-on-ubuntu&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.rbenv/plugins/ruby-build/
git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><category term="ruby-management" /><category term="snippet" /><category term="system" /><summary type="html">Description My rbenv needed to be updated one time and didn't know how to go about doing that process. However came across the following and its as simple as the commands below.</summary></entry><entry><title type="html">Rails Routing Examples</title><link href="http://localhost:4000/blog/2018/09/27/rails-routes-sample/" rel="alternate" type="text/html" title="Rails Routing Examples" /><published>2018-09-27T00:00:00-04:00</published><updated>2018-09-27T00:00:00-04:00</updated><id>http://localhost:4000/blog/2018/09/27/rails-routes-sample</id><content type="html" xml:base="http://localhost:4000/blog/2018/09/27/rails-routes-sample/">&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;##   Example of regular route:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'products/:id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'catalog#view'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example of named route that can be invoked with purchase_url(id: product.id)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'products/:id/purchase'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'catalog#purchase'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;as: :purchase&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example resource route (maps HTTP verbs to controller actions automatically):&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:products&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example resource route with options:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:products&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'short'&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toggle'&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
       &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sold'&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example resource route with sub-resources:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:products&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sales&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:seller&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example resource route with more complex sub-resources:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:products&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:comments&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sales&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'recent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;on: :collection&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example resource route with concerns:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;concern&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:toggleable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toggle'&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;concerns: :toggleable&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;concerns: :toggleable&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##   Example resource route within a namespace:&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:admin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;# Directs /admin/products/* to Admin::ProductsController&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;# (app/controllers/admin/products_controller.rb)&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:products&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><category term="rails" /><category term="routes" /><summary type="html">~~~ ruby</summary></entry><entry><title type="html">Motivation for this Blog (About)</title><link href="http://localhost:4000/blog/2018/08/08/about-this-blog/" rel="alternate" type="text/html" title="Motivation for this Blog (About)" /><published>2018-08-08T00:00:00-04:00</published><updated>2018-08-08T00:00:00-04:00</updated><id>http://localhost:4000/blog/2018/08/08/about-this-blog</id><content type="html" xml:base="http://localhost:4000/blog/2018/08/08/about-this-blog/">&lt;h2 id=&quot;heading-motivation-for-doing-this-blog&quot;&gt;Motivation for doing this Blog&lt;/h2&gt;

&lt;p&gt;At some stage we all put a piece of techology down and from time to time and forget(alot of the time for me) the little ways of how certain things are done and work. Therefore it is very important to have it all documented somewhere; to once another day serve as a refreshing primer for all the things we once saw clearly in mind. That is the case for this Blog and all things documented here within.&lt;/p&gt;

&lt;h3 id=&quot;heading-reasons-for-chosing-jekyll--simple-texture-theme&quot;&gt;Reasons for chosing Jekyll &amp;amp; Simple Texture theme.&lt;/h3&gt;
&lt;p&gt;This Blog theme(Simple Texture), found &lt;a href=&quot;https://github.com/yizeng/jekyll-theme-simple-texture&quot;&gt;here&lt;/a&gt;, was originally developed and created by &lt;a href=&quot;https://yizeng.me&quot;&gt;Yi Zeng&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I chose Simple Texture because it fit all of the purposes I was looking for when looking for a Jekyll Blog. Firstly the reason I chose Jekyll was because of its coder friendliness, in terms of everything being editable from my favourite editor Vim and secondly because Jekyll is by. other than that this particular blog theme offered:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A simple and neat listings of posts organized by date&lt;/li&gt;
  &lt;li&gt;Categories&lt;/li&gt;
  &lt;li&gt;Tags&lt;/li&gt;
  &lt;li&gt;A cool search that works well&lt;/li&gt;
  &lt;li&gt;A nice customizable intro cover, where any number of sections can be added.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of the above is I think quite well designed and managed by yaml(key-pair values), javascript, liquid templating and markdown is left for the user to manage the blog posts.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;job_title&quot;=&gt;nil, &quot;location&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;social_links&quot;=&gt;[{&quot;name&quot;=&gt;&quot;facebook&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;github&quot;, &quot;url&quot;=&gt;&quot;https://github.com/skull0inc/&quot;}, {&quot;name&quot;=&gt;&quot;instagram&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;linkedin&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;stackoverflow&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;twitter&quot;, &quot;url&quot;=&gt;nil}, {&quot;name&quot;=&gt;&quot;vk&quot;, &quot;url&quot;=&gt;nil}]}</name></author><category term="blog" /><category term="theme" /><summary type="html">Motivation for doing this Blog</summary></entry></feed>